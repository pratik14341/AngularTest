

==========================Tue Oct 15 2019 11:40:44 GMT+0100 (GMT Daylight Time)==========================
Error Message:= function lower(integer) does not exist
Error Desc:= message error: function lower(integer) does not exist
    at Connection.parseE (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:604:11)
    at Connection.parseMessage (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:401:19)
    at Socket.<anonymous> (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:121:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:597:20)
code 42883
{"All":{"name":"error","length":5651,"severity":"ERROR","code":"42883","hint":"No function matches the given name and argument types. You might need to add explicit type casts.","internalPosition":"5205","internalQuery":"SELECT array_to_json(array_agg(kk)) FROM (select count(1) OVER () AS counts, \r\n\t\tcm.id\r\n\t\t,cm.customercode as cc\r\n\t\t,to_char(cm.customercreateddate,'dd/MM/yyyy') as ccd\r\n\t\t,CASE WHEN((gstpan::int + legalstatus::int + legaldepartment::int + creditorder::int + legalcaseother::int + balanceconfirm::int + chequereturn::int + inactivecustomer::int + specialcase::int + caseremark::int) > 0 ) \r\n\t\t\tthen 'Yes' \r\n\t\t\telse 'No'\r\n\t\t\tend as ib\r\n\t\t,CASE WHEN(gstpan = 1::bit) then 'GST/PAN,' else '' end \r\n\t\t|| CASE WHEN(legalstatus = 1::bit) then 'Legal Status,' else '' end \r\n\t\t|| CASE WHEN(legaldepartment = 1::bit) then 'Legal Department,'  else '' end \r\n\t\t|| CASE WHEN(creditorder = 1::bit) then 'Credit-Order Block,' else '' end\r\n\t\t|| CASE WHEN(legalcaseother = 1::bit) then 'Legal Case to Other Company,'  else '' end \r\n\t\t|| CASE WHEN(balanceconfirm = 1::bit) then 'Balance Confirmation,'  else '' end \r\n\t\t|| CASE WHEN(chequereturn = 1::bit) then 'Cheque Return,'  else '' end \r\n\t\t|| CASE WHEN(inactivecustomer = 1::bit) then 'Inactive Customer,'  else '' end\r\n\t\t|| CASE WHEN(specialcase = 1::bit) then 'Special Case,'  else '' end \r\n\t\t|| CASE WHEN(caseremark = 1::bit) then 'Sp. Case Remark,'  else '' end as br\r\n\t\t,cm.customername as cn\r\n\t\t,cd.city1 as c\r\n\t\t,cd.mobileno as mn\r\n\t\t,cc.lookupvalue as  ccat \r\n\t\t,ct.lookupvalue as ct\r\n\t\t,category.lookupvalue as cat\r\n\t\t,COALESCE(cd.address1||',','') ||COALESCE(address2||',','') ||COALESCE(city1||',','')||COALESCE(regiondescription)||'-'||COALESCE(postalcode) as ad\r\n\t\t,CASE WHEN((CASE WHEN(cm.tea is not null) then 1 else 0 end + CASE WHEN(cm.mango is not null) then 1 else 0 end + CASE WHEN(cm.seeds is not null) then 1 else 0 end) > 0) then 'Yes' else 'No' end as ic\r\n\t\t,CASE WHEN(cm.tea is not null) then 'Tea,' else '' end || CASE WHEN(cm.mango is not null) then 'Mango,' else '' end || CASE WHEN(cm.seeds is not null) then 'Seeds' else '' end as crop\r\n\t\t,t.lat\r\n\t\t,t.lng\r\n\t\t,cm.zoneid as zi\r\n\t\t,cd.subregionid as sri\r\n\t\t,cd.salesofficeid as  di\r\n\t\t,cd.salesdistrictid as sdi\r\n\t\t,tsr.sales as sales\r\n\t\t,tsr.salesreturn as sr\r\n\t\t,cm.creditlimit as cl\r\n\t\t,tcr.collection as col\r\n\t\t,tar.outstanding as out\r\n\t\t,tdso.averagedays as averd\r\n\r\n\t\t,sdm.name as ter--territory\r\n\t\t,sr.name as reg--region\r\n\t\t,regiondescription as st--state\r\n\t\t,zone.zone as zo--zone\r\n\t\t,gm.srzonalname as gmnm--gmname\r\n\t\t,zm.zonalname as zmnm--zmname\r\n\t\t,rsm.inchargename as rsnm--rsmname\r\n\t\t,am.areaname as amnm--amname\r\n\t\t,tm.territoryname as tmnm--tmname\r\n\t\t,se.executivename as senm--sename\r\n\t\t,so.officername as sonm--soname\r\n\t\t,src.representativename as srnm--srname\r\n\t\t,'' as sdonm --sdoname\r\n\t\t,'' as mdonm -- mdoname\r\n\t\t\r\n\t\tfrom tblcustomermaster as cm\r\n\t\tinner join tblcustomerdetail as cd on cd.cid=cm.id\r\n\t\tleft join tbllookupvalues as cc on cc.lookupvalueid = cm.customercategoryid\r\n\t\tleft join tbllookupvalues as ct on ct.lookupvalueid = cm.customertypeid\r\n\t\tleft join tbllookupvalues as category on category.lookupvalueid = cm.categoryid\r\n\t\tleft join temp_tblsalesreport as tsr on tsr.customercodeid = cm.id\r\n\t\tleft join temp_tblcollectionreport as tcr on tcr.customercodeid = cm.id\r\n\t\tleft join temp_tblagingreport as tar on tar.customercodeid = cm.id\r\n\t\tleft join temp_tbldsoreport as tdso on tdso.customercodeid = cm.id\r\n\t\t\r\n\t\tleft join tblsalesdistrictmaster as sdm on sdm.id = cd.salesdistrictid\r\n\t\tleft join tblsubregion as sr on sr.id = cd.subregionid\r\n\t\tleft join tblzone as zone on zone.id = cm.zoneid\r\n\t\tleft join tblterritorymaster as gm on gm.zoneid = cm.zoneid and gm.subregionid = cd.subregionid and  gm.salesdistrictid = cd.salesdistrictid  and gm.srzonalcode = cm.srzonalmanagercode\r\n\t\tleft join tblterritorymaster as zm on zm.zoneid = cm.zoneid and zm.subregionid = cd.subregionid and  zm.salesdistrictid = cd.salesdistrictid  and zm.zonalcode = cm.zonalmanagercode\r\n\t\tleft join tblterritorymaster as rsm on rsm.zoneid = cm.zoneid and rsm.subregionid = cd.subregionid and  rsm.salesdistrictid = cd.salesdistrictid  and rsm.inchargecode = cm.salesinchargecode\r\n\t\tleft join tblterritorymaster as am on am.zoneid = cm.zoneid and am.subregionid = cd.subregionid and  am.salesdistrictid = cd.salesdistrictid  and am.areacode = cm.areamanagercode\r\n\t\tleft join tblterritorymaster as tm on tm.zoneid = cm.zoneid and tm.subregionid = cd.subregionid and  tm.salesdistrictid = cd.salesdistrictid  and tm.territorycode = cm.salesterritorycode\r\n\t\tleft join tblterritorymaster as se on se.zoneid = cm.zoneid and se.subregionid = cd.subregionid and  se.salesdistrictid = cd.salesdistrictid  and se.executivecode = cm.salesexecutivecode\r\n\t\tleft join tblterritorymaster as so on so.zoneid = cm.zoneid and so.subregionid = cd.subregionid and  so.salesdistrictid = cd.salesdistrictid  and so.officercode = cm.salesofficercode\r\n\t\tleft join tblterritorymaster as src on src.zoneid = cm.zoneid and src.subregionid = cd.subregionid and  src.salesdistrictid = cd.salesdistrictid  and src.representativecode = cm.salesrepresentativcode\r\n\r\n\t\tleft join (\r\n\t\tselect \r\n\t\trow_number() over(partition by customerid order by id desc) as no\r\n\t\t,customerid\r\n\t\t,lat\r\n\t\t,lng\r\n\t\tfrom tblcustomerlatlong ) as t on t.no=1 and t.customerid = cm.id\r\n\t\twhere inactivecustomer=0::bit and   (  lower(cm.id)  like  '%1062%' ) ORDER BY 1 desc OFFSET 0 ROWS FETCH NEXT 50 ROWS ONLY ) as kk ","where":"PL/pgSQL function usp_tblcustomermaster(integer,integer,integer,integer,integer,text,character varying,character varying) line 582 at EXECUTE","file":"parse_func.c","line":"523","routine":"ParseFuncOrColumn"}}
Store Proc := usp_tblcustomermaster
Function name := executefunction
Para := [{"name":"skip","value":0,"type":"string"},{"name":"pagecount","value":50,"type":"string"},{"name":"orderby","value":"1 desc","type":"string"},{"name":"otherfilter","value":"  (  lower(cm.id)  like  '%1062%' )","type":"string"},{"name":"mode","value":"8","type":"int"},{"name":"userid","value":"5","type":"int"}]


==========================Tue Oct 15 2019 11:40:44 GMT+0100 (GMT Daylight Time)==========================
Error Message:= function lower(integer) does not exist
Error Desc:= message error: function lower(integer) does not exist
    at Connection.parseE (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:604:11)
    at Connection.parseMessage (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:401:19)
    at Socket.<anonymous> (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:121:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:597:20)
code 42883
{"All":{"name":"error","length":5651,"severity":"ERROR","code":"42883","hint":"No function matches the given name and argument types. You might need to add explicit type casts.","internalPosition":"5205","internalQuery":"SELECT array_to_json(array_agg(kk)) FROM (select count(1) OVER () AS counts, \r\n\t\tcm.id\r\n\t\t,cm.customercode as cc\r\n\t\t,to_char(cm.customercreateddate,'dd/MM/yyyy') as ccd\r\n\t\t,CASE WHEN((gstpan::int + legalstatus::int + legaldepartment::int + creditorder::int + legalcaseother::int + balanceconfirm::int + chequereturn::int + inactivecustomer::int + specialcase::int + caseremark::int) > 0 ) \r\n\t\t\tthen 'Yes' \r\n\t\t\telse 'No'\r\n\t\t\tend as ib\r\n\t\t,CASE WHEN(gstpan = 1::bit) then 'GST/PAN,' else '' end \r\n\t\t|| CASE WHEN(legalstatus = 1::bit) then 'Legal Status,' else '' end \r\n\t\t|| CASE WHEN(legaldepartment = 1::bit) then 'Legal Department,'  else '' end \r\n\t\t|| CASE WHEN(creditorder = 1::bit) then 'Credit-Order Block,' else '' end\r\n\t\t|| CASE WHEN(legalcaseother = 1::bit) then 'Legal Case to Other Company,'  else '' end \r\n\t\t|| CASE WHEN(balanceconfirm = 1::bit) then 'Balance Confirmation,'  else '' end \r\n\t\t|| CASE WHEN(chequereturn = 1::bit) then 'Cheque Return,'  else '' end \r\n\t\t|| CASE WHEN(inactivecustomer = 1::bit) then 'Inactive Customer,'  else '' end\r\n\t\t|| CASE WHEN(specialcase = 1::bit) then 'Special Case,'  else '' end \r\n\t\t|| CASE WHEN(caseremark = 1::bit) then 'Sp. Case Remark,'  else '' end as br\r\n\t\t,cm.customername as cn\r\n\t\t,cd.city1 as c\r\n\t\t,cd.mobileno as mn\r\n\t\t,cc.lookupvalue as  ccat \r\n\t\t,ct.lookupvalue as ct\r\n\t\t,category.lookupvalue as cat\r\n\t\t,COALESCE(cd.address1||',','') ||COALESCE(address2||',','') ||COALESCE(city1||',','')||COALESCE(regiondescription)||'-'||COALESCE(postalcode) as ad\r\n\t\t,CASE WHEN((CASE WHEN(cm.tea is not null) then 1 else 0 end + CASE WHEN(cm.mango is not null) then 1 else 0 end + CASE WHEN(cm.seeds is not null) then 1 else 0 end) > 0) then 'Yes' else 'No' end as ic\r\n\t\t,CASE WHEN(cm.tea is not null) then 'Tea,' else '' end || CASE WHEN(cm.mango is not null) then 'Mango,' else '' end || CASE WHEN(cm.seeds is not null) then 'Seeds' else '' end as crop\r\n\t\t,t.lat\r\n\t\t,t.lng\r\n\t\t,cm.zoneid as zi\r\n\t\t,cd.subregionid as sri\r\n\t\t,cd.salesofficeid as  di\r\n\t\t,cd.salesdistrictid as sdi\r\n\t\t,tsr.sales as sales\r\n\t\t,tsr.salesreturn as sr\r\n\t\t,cm.creditlimit as cl\r\n\t\t,tcr.collection as col\r\n\t\t,tar.outstanding as out\r\n\t\t,tdso.averagedays as averd\r\n\r\n\t\t,sdm.name as ter--territory\r\n\t\t,sr.name as reg--region\r\n\t\t,regiondescription as st--state\r\n\t\t,zone.zone as zo--zone\r\n\t\t,gm.srzonalname as gmnm--gmname\r\n\t\t,zm.zonalname as zmnm--zmname\r\n\t\t,rsm.inchargename as rsnm--rsmname\r\n\t\t,am.areaname as amnm--amname\r\n\t\t,tm.territoryname as tmnm--tmname\r\n\t\t,se.executivename as senm--sename\r\n\t\t,so.officername as sonm--soname\r\n\t\t,src.representativename as srnm--srname\r\n\t\t,'' as sdonm --sdoname\r\n\t\t,'' as mdonm -- mdoname\r\n\t\t\r\n\t\tfrom tblcustomermaster as cm\r\n\t\tinner join tblcustomerdetail as cd on cd.cid=cm.id\r\n\t\tleft join tbllookupvalues as cc on cc.lookupvalueid = cm.customercategoryid\r\n\t\tleft join tbllookupvalues as ct on ct.lookupvalueid = cm.customertypeid\r\n\t\tleft join tbllookupvalues as category on category.lookupvalueid = cm.categoryid\r\n\t\tleft join temp_tblsalesreport as tsr on tsr.customercodeid = cm.id\r\n\t\tleft join temp_tblcollectionreport as tcr on tcr.customercodeid = cm.id\r\n\t\tleft join temp_tblagingreport as tar on tar.customercodeid = cm.id\r\n\t\tleft join temp_tbldsoreport as tdso on tdso.customercodeid = cm.id\r\n\t\t\r\n\t\tleft join tblsalesdistrictmaster as sdm on sdm.id = cd.salesdistrictid\r\n\t\tleft join tblsubregion as sr on sr.id = cd.subregionid\r\n\t\tleft join tblzone as zone on zone.id = cm.zoneid\r\n\t\tleft join tblterritorymaster as gm on gm.zoneid = cm.zoneid and gm.subregionid = cd.subregionid and  gm.salesdistrictid = cd.salesdistrictid  and gm.srzonalcode = cm.srzonalmanagercode\r\n\t\tleft join tblterritorymaster as zm on zm.zoneid = cm.zoneid and zm.subregionid = cd.subregionid and  zm.salesdistrictid = cd.salesdistrictid  and zm.zonalcode = cm.zonalmanagercode\r\n\t\tleft join tblterritorymaster as rsm on rsm.zoneid = cm.zoneid and rsm.subregionid = cd.subregionid and  rsm.salesdistrictid = cd.salesdistrictid  and rsm.inchargecode = cm.salesinchargecode\r\n\t\tleft join tblterritorymaster as am on am.zoneid = cm.zoneid and am.subregionid = cd.subregionid and  am.salesdistrictid = cd.salesdistrictid  and am.areacode = cm.areamanagercode\r\n\t\tleft join tblterritorymaster as tm on tm.zoneid = cm.zoneid and tm.subregionid = cd.subregionid and  tm.salesdistrictid = cd.salesdistrictid  and tm.territorycode = cm.salesterritorycode\r\n\t\tleft join tblterritorymaster as se on se.zoneid = cm.zoneid and se.subregionid = cd.subregionid and  se.salesdistrictid = cd.salesdistrictid  and se.executivecode = cm.salesexecutivecode\r\n\t\tleft join tblterritorymaster as so on so.zoneid = cm.zoneid and so.subregionid = cd.subregionid and  so.salesdistrictid = cd.salesdistrictid  and so.officercode = cm.salesofficercode\r\n\t\tleft join tblterritorymaster as src on src.zoneid = cm.zoneid and src.subregionid = cd.subregionid and  src.salesdistrictid = cd.salesdistrictid  and src.representativecode = cm.salesrepresentativcode\r\n\r\n\t\tleft join (\r\n\t\tselect \r\n\t\trow_number() over(partition by customerid order by id desc) as no\r\n\t\t,customerid\r\n\t\t,lat\r\n\t\t,lng\r\n\t\tfrom tblcustomerlatlong ) as t on t.no=1 and t.customerid = cm.id\r\n\t\twhere inactivecustomer=0::bit and   (  lower(cm.id)  like  '%1062%' ) ORDER BY 1 desc OFFSET 0 ROWS FETCH NEXT 50 ROWS ONLY ) as kk ","where":"PL/pgSQL function usp_tblcustomermaster(integer,integer,integer,integer,integer,text,character varying,character varying) line 582 at EXECUTE","file":"parse_func.c","line":"523","routine":"ParseFuncOrColumn"}}
Store Proc := 
Function name := executefunction
Para := ""


==========================Tue Oct 15 2019 13:40:07 GMT+0100 (GMT Daylight Time)==========================
Error Message:= function getfinancialdate() does not exist
Error Desc:= message error: function getfinancialdate() does not exist
    at Connection.parseE (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:604:11)
    at Connection.parseMessage (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:401:19)
    at Socket.<anonymous> (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:121:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:597:20)
code 42883
{"All":{"name":"error","length":898,"severity":"ERROR","code":"42883","hint":"No function matches the given name and argument types. You might need to add explicit type casts.","internalPosition":"440","internalQuery":"insert into temp_tblsalesreport(customercodeid,sales,salesreturn)\r\n\t\tselect\r\n\t\tsr.customercodeid\r\n\t\t,sum(sr.finaltaxablevalue) as sales\r\n\t\t,sum(CASE WHEN(sr.type = 'ZIRE' or sr.type = 'S2') then sr.finaltaxablevalue else 0 end)  as salesreturn\r\n\t\tfrom tblcustomermaster as cm\r\n\t\tinner join tblsalesreport as sr on sr.customercodeid = cm.id\r\n\t\twhere --cm.id = COALESCE(p_customerid,cm.id) and\r\n\t\t invoicedate between (select startdate from getfinancialdate()) and  (select enddate from getfinancialdate())\r\n\t\t group by sr.customercodeid","where":"PL/pgSQL function usp_tblcustomermaster(integer,integer,integer,integer,integer,text,character varying,character varying) line 454 at SQL statement","file":"parse_func.c","line":"523","routine":"ParseFuncOrColumn"}}
Store Proc := usp_tblcustomermaster
Function name := executefunction
Para := [{"name":"skip","value":0,"type":"string"},{"name":"pagecount","value":50,"type":"string"},{"name":"orderby","value":"cc asc","type":"string"},{"name":"otherfilter","value":" 1 = 1 ","type":"string"},{"name":"mode","value":"8","type":"int"},{"name":"userid","value":"5","type":"int"}]


==========================Tue Oct 15 2019 13:40:07 GMT+0100 (GMT Daylight Time)==========================
Error Message:= function getfinancialdate() does not exist
Error Desc:= message error: function getfinancialdate() does not exist
    at Connection.parseE (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:604:11)
    at Connection.parseMessage (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:401:19)
    at Socket.<anonymous> (C:\Pratik\SVN\GSP Admin\GSP_API\node_modules\pg\lib\connection.js:121:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:597:20)
code 42883
{"All":{"name":"error","length":898,"severity":"ERROR","code":"42883","hint":"No function matches the given name and argument types. You might need to add explicit type casts.","internalPosition":"440","internalQuery":"insert into temp_tblsalesreport(customercodeid,sales,salesreturn)\r\n\t\tselect\r\n\t\tsr.customercodeid\r\n\t\t,sum(sr.finaltaxablevalue) as sales\r\n\t\t,sum(CASE WHEN(sr.type = 'ZIRE' or sr.type = 'S2') then sr.finaltaxablevalue else 0 end)  as salesreturn\r\n\t\tfrom tblcustomermaster as cm\r\n\t\tinner join tblsalesreport as sr on sr.customercodeid = cm.id\r\n\t\twhere --cm.id = COALESCE(p_customerid,cm.id) and\r\n\t\t invoicedate between (select startdate from getfinancialdate()) and  (select enddate from getfinancialdate())\r\n\t\t group by sr.customercodeid","where":"PL/pgSQL function usp_tblcustomermaster(integer,integer,integer,integer,integer,text,character varying,character varying) line 454 at SQL statement","file":"parse_func.c","line":"523","routine":"ParseFuncOrColumn"}}
Store Proc := 
Function name := executefunction
Para := ""
